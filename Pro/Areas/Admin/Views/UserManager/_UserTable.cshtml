
@using Pro.Services.Contracts
@inject ISecurityTrimmingService securityTrimmingService


<div id="toolbar">
    <security-trimming asp-area="Admin" asp-controller="RoleManager" asp-action="Index">
        <a asp-area="Admin" asp-controller="RoleManager" asp-action="Index" class="btn btn-info">
            <i class="fa fa-users-cog"></i> | مدیریت نقش ها
        </a>
    </security-trimming>
    <button type="button" class="btn btn-success" data-toggle="ajax-modal" data-url="@Url.Action("RenderUser","UserManager")">
        <i class="fa fa-plus"></i> | افزودن کاربر جدید
    </button>
    <button type="button" class="btn btn-danger" data-toggle="ajax-modal" data-url="@Url.Action("DeleteGroup","UserManager")">
        <i class="fa fa-trash"></i> | حذف گروهی
    </button>

</div>

    <table id="table"
           data-toolbar="#toolbar"
           data-search="true"
           data-show-refresh="true"
           data-show-toggle="false"
           data-show-fullscreen="true"
           data-show-columns="true"
           data-detail-view="true"
           data-show-export="true"
           data-click-to-select="true"
           data-detail-formatter="detailFormatter"
           data-minimum-count-columns="2"
           data-show-pagination-switch="true"
           data-pagination="true"
           data-id-field="id"
           data-page-list="[10, 25, 50, 100, all]"
           data-show-footer="true"
           data-side-pagination="server"
           data-url="/Admin/UserManager/GetUsers"
           data-response-handler="responseHandler"></table>


    <script>
        var $table = $('#table')
        var selections = []


  function get_query_params(p) {
    return {
        extraParam: 'abc',
        search: p.title,
        sort: p.sort,
        order: p.order,
        limit: p.limit,
        offset: p.offset
    }
}



        function responseHandler(res) {
            $.each(res.rows, function (i, row) {
                row.state = $.inArray(row.id, selections) !== -1
            })
            return res
        }

    function isActiveFormatter(value, row, index) {
    var spanClass = "badge badge-success";
    var IsActive = "فعال";
    if (!row.IsActive) {
        IsActive = "غیرفعال";
        spanClass = "badge badge-danger";
    }

    return [
        '<span class="' + spanClass + '">' + IsActive + '</span>'
    ].join('')
    }


    function roleFormatter(value, row, index) {
        return [
            '<span class="badge badge-primary">' + value + '</span>'
    ].join('')
  }


         function detailFormatter(index, row) {
            var html = []
            $.each(row, function (key, value) {
                if (key != "state" && key != "Id" && key!="ردیف" && key!="تصویر" && key!="IsActive")
                    html.push('<p><b>' + key + ':</b> ' + value + '</p>')

                if (key == "تصویر") {
                    var url = '@string.Format("{0}://{1}", Context.Request.Scheme, Context.Request.Host)' + '/avatars/' + value;
                    html.push('<p><b>' + key + ':</b> <img src="' + url + '" height="50" />')
                }


            })
            return html.join('')
        }


      function operateFormatter(value, row, index) {
        var access = "";
        if ('@securityTrimmingService.CanUserAccess(User,"Admin","UserManager","Details")' == 'True') {
            access = access + '<a class="btn btn btn-primary btn-sm" href=@Url.Action("Details","UserManager")?userId=' + row.Id + ' title="مدیریت"><i class="fa fa-user"></i> | مدیریت </a>';
        }
        if ('@securityTrimmingService.CanUserAccess(User,"Admin","DynamicAccess","Index")' == 'True') {
            access = access + '<a class="btn btn btn-success mr-1 btn-sm" href=@Url.Action("Index","DynamicAccess")?userId=' + row.Id + '> سطح دسترسی </a>';
        }
        if ('@securityTrimmingService.CanUserAccess(User,"Admin","UserManager","RenderUser")' == 'True') {
            access = access + '<button type="button" class="btn-link text-success" data-toggle="ajax-modal" data-url=@Url.Action("RenderUser", "UserManager")?userId=' + row.Id + ' title="ویرایش"><i class="fa fa-edit"></i></button >';
        }
        if ('@securityTrimmingService.CanUserAccess(User,"Admin","UserManager","Delete")' == 'True') {
            access = access + '<button type="button" class="btn-link text-danger" data-toggle="ajax-modal" data-url=@Url.Action("Delete", "UserManager")/?userId=' + row.Id + ' title="حذف"><i class="fa fa-trash"></i></button >';
        }
        return access;
    }


     function checkBoxFormat(value, row) {
       return '<input type="checkbox" name="btSelectItem" value="' + row.Id + '" />';
    }


        function totalTextFormatter(data) {
            return 'تعداد'
        }

        function totalNameFormatter(data) {
            return data.length
        }


        function initTable() {
            $table.bootstrapTable('destroy').bootstrapTable({
                height: 600,
                locale: 'fa-IR',
                columns: [
                    [{
                        field: 'state',
                        checkbox: true,
                        rowspan: 1,
                        align: 'center',
                        valign: 'middle',
                        formatter: checkBoxFormat
                    },
                     //{
                     //title: 'ردیف',
                     //field: 'ردیف',
                     //rowspan: 2,
                     //align: 'center',
                     //valign: 'middle',
                     //footerFormatter: totalTextFormatter
                     //},
                        {
                        title: 'جزئیات اطلاعات کاربران',
                        colspan: 8,
                        align: 'center'
                    }],
                    [{
                        field: 'نام',
                        title: 'نام',
                        sortable: true,
                        footerFormatter: totalNameFormatter,
                        align: 'center'
                    },
                    //{
                    //    field: 'نام خانوادگی',
                    //    title: 'نام خانوادگی',
                    //    sortable: true,
                    //    align: 'center'
                    // },
                        //{
                        //field: 'ایمیل',
                        //title: 'ایمیل',
                        //sortable: true,
                        //align: 'center'
                        //},
                        {
                        field: 'نام کاربری',
                        title: 'نام کاربری',
                        sortable: true,
                        align: 'center'
                        },
                        //{
                        //field: 'تاریخ عضویت',
                        //title: 'تاریخ عضویت',
                        //sortable: true,
                        //align: 'center'
                        //},
                        {
                        field: 'نقش',
                        title: 'نقش',
                        align: 'center',
                        formatter: roleFormatter
                    },{
                    field: '',
                    title: 'وضعیت',
                    align: 'center',
                    formatter: isActiveFormatter
                   },{
                        field: 'operate',
                        title: 'عملیات',
                        align: 'center',
                        events: window.operateEvents,
                        formatter: operateFormatter
                    }]
                ]
            })
        }

        $(function () {
            initTable()
            $('#locale').change(initTable)
        })</script>


    